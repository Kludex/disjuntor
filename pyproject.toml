[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "disjuntor"
version = "0.0.0"
description = ""
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = ["circuit breaker"]
authors = [{ name = "Marcelo Trylesinski", email = "marcelotryle@gmail.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Internet :: WWW/HTTP",
    "Operating System :: OS Independent",
]
dependencies = []

[tool.hatch.build.targets.wheel]
[tool.hatch.build.targets.sdist]
include = ["/sqladmin"]

[tool.hatch.build]
exclude = ["tests/*"]

[tool.hatch.envs.default]
dependencies = [
    "autoflake==1.4",
    "black==22.6.0",
    "build==0.8.0",
    "coverage==6.4.2",
    "isort==5.10.1",
    "mypy==0.971",
    "pytest==7.1.2",
    "pytest-asyncio==0.19.0",
    "rich==12.5.0",
    "typing_extensions==4.3.0",
]
[tool.hatch.envs.default.scripts]
check = "isort --check . && black --check . && mypy disjuntor"
clean = "rm -r dist site"
cov = "coverage report --show-missing --skip-covered --fail-under=100 && coverage xml"
lint = "autoflake --in-place --recursive . && isort . && black ."
test = "python -m coverage run -m pytest -s"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true

[tool.isort]
profile = "black"
combine_as_imports = true

[tool.coverage.run]
source_pkgs = ["disjuntor", "tests"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: nocover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
